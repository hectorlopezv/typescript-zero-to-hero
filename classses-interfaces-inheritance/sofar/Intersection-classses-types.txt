// //Interfaces

// //TYPE WAY
// type addFn = (a: number, b: number) => number;

// let add: addFn;
// add = (n1:number, n2:number) => {return n1 + n2};

// //INTERFACE WAY DEFINE STRUCUTURE OF FUNCTION
// interface addFnInterfaceWay{
//     (a: number, b: number):number; //anonymous function defined structure function type
// }
// let add_2: addFnInterfaceWay;
// add_2 = (n1:number, n2:number) => {return n1 + n2};


// interface Named {
//     readonly name: string;
// }

// interface Person {
//     name: string;
//     age?: number; //optional paramater
//     greet(phrase: string): void;
// }

// interface Greetable extends Named {// injecting what is inside Named in Here
//     greet(phrase: string): void;
// }


// //Interfaces in Classes
// class Persons implements Greetable{
//     constructor(public name: string, private readonly age: number){

//     }
//     //interface has no concreet implementations parts
//     greet(phrase: string){
//         console.log(this.age);
//         console.log(phrase);
//     }
// }

// let user1: Greetable;

// user1 = new Persons('Maximum', 30);

// user1.greet('Hector');
 
